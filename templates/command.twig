{% extends "layout.twig" %}

{% block title %}{{ method }} {{ uri }}{% endblock %}

{% block content %}
<div class="full-width-container">
    <div class="page-header">
        <h1 class="endpoint-title page-header-title"><span class="endpoint-title-method">{{ method }}</span> {{ formattedUri|raw }}</h1>
    </div>

    <div class="sidebar">
        <ul class="endpoint-method-list" aria-label="Other methods">
            {% for httpMethod in ['GET', 'PUT', 'POST', 'DELETE'] %}
                <li class="endpoint-method">
                {% set item = related[httpMethod] %}
                {% if item %}
                    <a class="endpoint-method-{{ httpMethod }} endpoint-method-ctrl{% if httpMethod == method %} active{% endif %}" href="{{ item.link }}">{{ item.method }}</a>
                {% else %}
                    <button class="unimplemented-method endpoint-method-ctrl" type="button" aria-label="Unimplemented" disabled>{{ httpMethod }}</button>
                {% endif %}
                </li>
            {% endfor %}
        </ul>

        {% if summary %}
            <p class="endpoint-summary">{{ summary }}</p>
        {% endif %}

        {% if command %}
            <dl class="endpoint-command-name sidebar-property">
                <dt class="sidebar-property-key">Command</dt>
                <dd class="sidebar-property-value">{{ command }}</dd>
            </dl>
        {% endif %}

        {% if directory %}
            <dl class="endpoint-directory sidebar-property">
                <dt class="sidebar-property-key">Directory</dt>
                <dd class="sidebar-property-value"><a href="/directory/{{ directory }}.html" class="endpoint-directory-link">{{ directory|split("-")|join(" ")|capitalize }}</a></dd>
            </dl>
        {% endif %}

        {% if roles|length %}
            <dl class="endpoint-roles sidebar-property">
                <dt class="sidebar-property-key">Roles</dt>
                {% for name, allowed in roles %}
                    <dd class="endpoint-role-{{ allowed ? 'allowed' : 'not-allowed' }} sidebar-property-value">
                        {{ name }}
                        <span> {{ allowed ? 'allowed' : 'not authorized' }}</span>
                    </dd>
                {% endfor %}
            </dl>
        {% endif %}
    </div>

    <div class="endpoint-body page-body">
        <ol class="tab-list" role="tablist">
            <li role="presentation" class="current tab-item">
                <a id="parameters-tab-ctrl" aria-selected="true" tabindex="0" class="tab-control" role="tab">Parameters</a>
            </li>
            <li role="presentation" class="tab-item">
                <a id="request-response-tab-ctrl" aria-selected="false" tabindex="-1" class="tab-control" role="tab">Request & Response</a>
            </li>
        </ol>

        <div aria-labelledby="parameters-tab-ctrl" aria-hidden="false" class="parameters-tab tab-content" role="tabpanel">
            <form class="parameters-form">
                {% for group in groupedParams %}
                    {% if group.params|length %}
                        <h3 class="parameters-group-name">{{ group.location }} params</h3>
                        <ul class="parameters-group-list">
                            {% for key, param in group.params %}
                                <li class="parameter">
                                    <label for="{{ key }}-param" class="parameter-name">{{ key }}</label>

                                    {% if param.description %}
                                        <p id="{{ key }}-description" class="parameter-description">{{ param.description }}</p>
                                    {% endif %}

                                    {% if param.enum %}
                                        <select
                                            name="{{ key }}" id="{{ key }}-param"
                                            class="parameter-input js-param"
                                            {% if param.required %}required{% endif %}
                                            {% if param.description %} aria-describedby="{{ key }}-description"{% endif %}
                                        >
                                            <option></option>
                                            {% for value in param.enum %}
                                                <option>{{ value }}</option>
                                            {% endfor %}
                                        </select>
                                    {% else %}
                                        <div class="parameter-input clearable-input-container">
                                            <input 
                                                name="{{ key }}" id="{{ key }}-param"
                                                class="clearable-input js-param"
                                                type="{{ param.type == 'integer' ? 'number' : 'text' }}"
                                                {% if param.required %}required{% endif %}
                                                {% if param.description %}aria-describedby="{{ key }}-description"{% endif %}
                                                {% if param.type == 'integer' %}autocomplete="off"{% endif %}
                                            >
                                            <button aria-controls="{{ key }}-param" class="clearable-input-control" title="Clear" type="button" hidden>
                                                <span>Clear</span>
                                            </button>
                                        </div>
                                    {% endif %}
                                    <div class="parameter-meta">
                                        <p class="parameter-required">{{ param.required ? 'Required' : 'Optional' }}</p>
                                        <p class="parameter-type">{{ param.type }}</p>
                                    </div>
                                </li>
                            {% endfor %}
                        </ul>
                    {% endif %}
                {% endfor %}

                <div class="parameters-submit-container">
                    <button class="parameters-submit response-button primary-button" type="submit">
                        <span class="text">Try it!</span>
                    </button>
                </div>
            </form>
        </div>

        <div aria-labelledby="request-response-tab-ctrl" aria-hidden="true" class="request-response-tab tab-content" role="tabpanel" hidden>
            <p class="request-response-placeholder">You need to submit a request before you can see the result.</p>

            <div class="request-container">
                <div class="request-headers-container" hidden>
                    <h3 class="result-header">Request headers</h3>
                    <pre class="request-headers"><code class="language-http"></code></pre>
                </div>
                <div class="request-body-container" hidden>
                    <h3 class="result-header">Request body</h3>
                    <pre class="request-body"><code class="language-javascript"></code></pre>
                </div>
            </div>

            <div class="response-container">
                <div class="response-headers-container" hidden>
                    <h3 class="result-header">Response headers</h3>
                    <pre class="response-headers"><code class="language-http"></code></pre>
                </div>
                <div class="response-body-container" hidden>
                    <h3 class="result-header">Response body</h3>
                    <pre class="response-body"><code class="language-javascript"></code></pre>
                </div>
            </div>
        </div>
    </div>




<script type="text/javascript">
$(function() {
    localStorage.clear();

    var pageBody = $('.page-body'),
        pageBodyBottom = pageBody.offset().top + pageBody.outerHeight(true),
        submitContainer = pageBody.find('.parameters-submit-container');

    if (pageBodyBottom > window.innerHeight) {
        pageBody.addClass('fixed-parent');
        submitContainer.addClass('fixed');
    }

    $('form').on('keyup', '.clearable-input', function () {
        var value = $(this).val(),
            control = $(this).next('.clearable-input-control');

        if (value.length > 0) {
            control.attr('hidden', false);
            return;
        }
        control.attr('hidden', true);
    });

    $('form').on('click', '.clearable-input-control', function () {
        $(this).attr('hidden', true).prev('.clearable-input').val('');
    });

    $('.parameters-submit').click(function (e) {
        e.preventDefault();
        var data = {
            method: '{{ method }}',
            uri: '{{ uri }}',
            params: {}
        };

        switchToTab($('.request-response-tab'));

        $('.request-response-placeholder').attr('hidden', true);

        $('.js-param').each(function (key, input) {
            if ($(input).val() !== '') {
                data.params[$(input).attr('name')] = $(input).val();
            }
        });

        replacer = function(match, param) {
            if (data.params.hasOwnProperty(param)) {
                val = data.params[param];
                delete data.params[param];
                return val;
            }
        };

        data.uri = data.uri.replace(/{([a-zA-Z]+)}/g, replacer);

        $.ajax({
            url: '/proxy.php',
            method: 'POST',
            contentType: 'application/json; charset=UTF-8',
            data: JSON.stringify(data)
        })
        .done(function (response) {
            $('.request-headers-container').attr('hidden', false).find('code').text(response.requestHeaders);
            if (typeof response.request !== 'undefined' && response.request.length > 0) {
                $('.request-body-container').attr('hidden', false).find('code').text(response.request);
            }
            $('.response-headers-container').attr('hidden', false).find('code').text(response.responseHeaders);
            $('.response-body-container').attr('hidden', false).find('code').text(response.response);
            Prism.highlightAll();
        });
    });

    $('.tab-control').on('click', function (evt) {
        var tab = $('.tab-content[aria-labelledby=' + $(this).attr('id') + ']');

        evt.preventDefault();

        switchToTab(tab);
    });

    function switchToTab (newTab) {
        var tabCtrl = $('#' + newTab.attr('aria-labelledby'));

        $('.tab-control').attr({'aria-selected': false, 'tabindex': '-1'}).parent('.tab-item').removeClass('current');
        tabCtrl.attr({'aria-selected': true, 'tabindex': '0'}).parent('.tab-item').addClass('current');

        $('.tab-content').attr('aria-hidden', true).attr('hidden', true);
        newTab.attr('aria-hidden', false).attr('hidden', false);

        tabCtrl.focus();
    }
});
</script>
{% endblock %}
